import java.util.Arrays;
import java.util.ArrayList;
class PieChart
{
  final int ARC_X = width/2;
  final int ARC_Y = height/2;
  final int RADIUS = 500;
  ArrayList<Integer> data;
  ArrayList<Float> angles;
  ArrayList<String> places;
  String airport;
  int openedDone = 0;
  int angle = 360;
  int total;
  float tXpos, tYpos, tAngle;
  boolean open = false;
  //boolean close = false;
  boolean closed = false;
  boolean destAirport = true;
  String dateEnd = "20";
  String dateStart = "22";


  PieChart (ArrayList<Integer> data, ArrayList<String> places, String airport)
  {
    this.data = data;
    for (int i=0; i < data.size(); i++)
    {
      total += data.get(i);
    }
    println(data.size());
    
    this.places = places; 
    println(places.size());
    angles = convertDataToAngles(data);
    this.places.add("Others");
    println(angles.size());
    println(places.size());


    this.airport = airport;
  }


  ArrayList<Float> convertDataToAngles(ArrayList<Integer> data)
  {
    float others = 0;
    ArrayList<Float> ang = new ArrayList<Float>();
    ArrayList<Integer> rem = new ArrayList<Integer>();

    
    for (int i=0; i < data.size(); i++)
    {
      float a = (float)Math.ceil(data.get(i)*3600/total)/10;
      if (a <= 7)
      {
        rem.add(i);
        others += a;
      }
      else
        ang.add(a);
    }
    println(ang.size());
    println(rem.size());
    println(others);
    for (int i=rem.size()-1; i >= 0; i--)
    {
      places.remove((int)rem.get(i));
    }
    int totalAng = 0;
    ang.add(others);
    for (int i=0; i < ang.size(); i++)
    {
      totalAng += ang.get(i); 
    }
    ang.set(ang.size()-1, (float)(ang.get(ang.size()-1)+360-totalAng));
    return ang;
  }

  void draw()
  {

    if (!closed)
    {
      fill(BLACK);
      textSize(25);
      textAlign(CENTER, TOP);
      text( "Number of flights "+(destAirport?"to ":"from ") +airport+" from 01/"+dateStart+"/2022 - 01/"+dateEnd+"/2022", ARC_X, 50);
      textAlign(LEFT, BOTTOM);
      float lastAngle = 0;
      for (int i = 0; i < angles.size(); i++)
      {
        if (i < angles.size()-1)
        {
          float grey = map(i, 0, angles.size(), 0, 255);
          fill (20+grey, 21+0.4*grey, 90-0.5*grey);
        }
        else
          fill (60);
        arc(ARC_X, ARC_Y, RADIUS, RADIUS, lastAngle, lastAngle+radians(angles.get(i)));

        tAngle = lastAngle+(radians(angles.get(i))/2);
        fill(BLACK);
        tXpos = ARC_X + RADIUS*cos(tAngle)/1.7;
        tYpos = ARC_Y + RADIUS*sin(tAngle)/1.7;
        textSize(6+5/angles.size()+2*RADIUS/90);
        text(places.get(i), tXpos-6, tYpos+6);

        fill(WHITE);
        tXpos = ARC_X + RADIUS*cos(tAngle)/2.5;
        tYpos = ARC_Y + RADIUS*sin(tAngle)/2.5;
        textSize(6+5/places.size()+RADIUS/60);
        text(Math.ceil((double)(angles.get(i))*1000/360)/10+"%", tXpos-16, tYpos+5);
        lastAngle += radians(angles.get(i));
      }
    }
    fill(BLACK);
    textSize(20);
    text("Airport: " + airport, 100, SCREENY/2);
    text("Total flights: "+total, 100, SCREENY/2 + 25);
    noStroke();
    if (!open)
    {
      fill(WHITE);     // background color
      arc(ARC_X, ARC_Y, RADIUS+100, RADIUS+100, 0, radians(angle));
      angle = angle-10;
      if (angle <=0)
        open = true;
    }
    
    
    //if (close)
    //{
    //  fill(BLACK);    // background color
    //  arc(ARC_X, ARC_Y, RADIUS+100, RADIUS+100, 0, radians(angle));
    //  angle = angle+10;
    //  if (angle >=360)
    //    closed = true;
    //}
  }
}
